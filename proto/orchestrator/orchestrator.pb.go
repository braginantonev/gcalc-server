// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.1
// source: proto/orchestrator/orchestrator.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Argument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         float32                `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	Expected      string                 `protobuf:"bytes,2,opt,name=expected,proto3" json:"expected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Argument) Reset() {
	*x = Argument{}
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Argument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Argument) ProtoMessage() {}

func (x *Argument) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Argument.ProtoReflect.Descriptor instead.
func (*Argument) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *Argument) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Argument) GetExpected() string {
	if x != nil {
		return x.Expected
	}
	return ""
}

type Task struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstArgument        *Argument              `protobuf:"bytes,2,opt,name=first_argument,json=firstArgument,proto3" json:"first_argument,omitempty"`
	SecondArgument       *Argument              `protobuf:"bytes,3,opt,name=second_argument,json=secondArgument,proto3" json:"second_argument,omitempty"`
	Operator             string                 `protobuf:"bytes,4,opt,name=operator,proto3" json:"operator,omitempty"`
	OperationTimeSeconds int32                  `protobuf:"varint,5,opt,name=operation_time_seconds,json=operationTimeSeconds,proto3" json:"operation_time_seconds,omitempty"`
	Status               string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Str                  string                 `protobuf:"bytes,7,opt,name=str,proto3" json:"str,omitempty"`
	Answer               float64                `protobuf:"fixed64,8,opt,name=answer,proto3" json:"answer,omitempty"`
	Error                string                 `protobuf:"bytes,9,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetFirstArgument() *Argument {
	if x != nil {
		return x.FirstArgument
	}
	return nil
}

func (x *Task) GetSecondArgument() *Argument {
	if x != nil {
		return x.SecondArgument
	}
	return nil
}

func (x *Task) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *Task) GetOperationTimeSeconds() int32 {
	if x != nil {
		return x.OperationTimeSeconds
	}
	return 0
}

func (x *Task) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Task) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *Task) GetAnswer() float64 {
	if x != nil {
		return x.Answer
	}
	return 0
}

func (x *Task) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TaskResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Result        float64                `protobuf:"fixed64,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *TaskResult) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskResult) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type SavedExpression struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SavedExpression) Reset() {
	*x = SavedExpression{}
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SavedExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedExpression) ProtoMessage() {}

func (x *SavedExpression) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedExpression.ProtoReflect.Descriptor instead.
func (*SavedExpression) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *SavedExpression) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SavedExpression) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Expression struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Str           string                 `protobuf:"bytes,3,opt,name=str,proto3" json:"str,omitempty"`
	TasksQueue    []*Task                `protobuf:"bytes,4,rep,name=tasks_queue,json=tasksQueue,proto3" json:"tasks_queue,omitempty"`
	Result        float64                `protobuf:"fixed64,5,opt,name=result,proto3" json:"result,omitempty"`
	Error         string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Expression) Reset() {
	*x = Expression{}
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *Expression) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Expression) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Expression) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *Expression) GetTasksQueue() []*Task {
	if x != nil {
		return x.TasksQueue
	}
	return nil
}

func (x *Expression) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Expression) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Expressions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Expression    []*Expression          `protobuf:"bytes,1,rep,name=expression,proto3" json:"expression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Expressions) Reset() {
	*x = Expressions{}
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Expressions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expressions) ProtoMessage() {}

func (x *Expressions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_orchestrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expressions.ProtoReflect.Descriptor instead.
func (*Expressions) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *Expressions) GetExpression() []*Expression {
	if x != nil {
		return x.Expression
	}
	return nil
}

var File_proto_orchestrator_orchestrator_proto protoreflect.FileDescriptor

const file_proto_orchestrator_orchestrator_proto_rawDesc = "" +
	"\n" +
	"%proto/orchestrator/orchestrator.proto\x12\forchestrator\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1egoogle/protobuf/wrappers.proto\"<\n" +
	"\bArgument\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x02R\x05value\x12\x1a\n" +
	"\bexpected\x18\x02 \x01(\tR\bexpected\"\xc0\x02\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12=\n" +
	"\x0efirst_argument\x18\x02 \x01(\v2\x16.orchestrator.ArgumentR\rfirstArgument\x12?\n" +
	"\x0fsecond_argument\x18\x03 \x01(\v2\x16.orchestrator.ArgumentR\x0esecondArgument\x12\x1a\n" +
	"\boperator\x18\x04 \x01(\tR\boperator\x124\n" +
	"\x16operation_time_seconds\x18\x05 \x01(\x05R\x14operationTimeSeconds\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x10\n" +
	"\x03str\x18\a \x01(\tR\x03str\x12\x16\n" +
	"\x06answer\x18\b \x01(\x01R\x06answer\x12\x14\n" +
	"\x05error\x18\t \x01(\tR\x05error\"4\n" +
	"\n" +
	"TaskResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x16\n" +
	"\x06result\x18\x02 \x01(\x01R\x06result\"7\n" +
	"\x0fSavedExpression\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\xa9\x01\n" +
	"\n" +
	"Expression\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x10\n" +
	"\x03str\x18\x03 \x01(\tR\x03str\x123\n" +
	"\vtasks_queue\x18\x04 \x03(\v2\x12.orchestrator.TaskR\n" +
	"tasksQueue\x12\x16\n" +
	"\x06result\x18\x05 \x01(\x01R\x06result\x12\x14\n" +
	"\x05error\x18\x06 \x01(\tR\x05error\"G\n" +
	"\vExpressions\x128\n" +
	"\n" +
	"expression\x18\x01 \x03(\v2\x18.orchestrator.ExpressionR\n" +
	"expression2\xf8\x02\n" +
	"\x13OrchestratorService\x12;\n" +
	"\aGetTask\x12\x1c.google.protobuf.StringValue\x1a\x12.orchestrator.Task\x12H\n" +
	"\x0eSaveTaskResult\x12\x18.orchestrator.TaskResult\x1a\x1c.google.protobuf.StringValue\x12L\n" +
	"\rAddExpression\x12\x1c.google.protobuf.StringValue\x1a\x1d.orchestrator.SavedExpression\x12C\n" +
	"\x0eGetExpressions\x12\x16.google.protobuf.Empty\x1a\x19.orchestrator.Expressions\x12G\n" +
	"\rGetExpression\x12\x1c.google.protobuf.StringValue\x1a\x18.orchestrator.ExpressionB:Z8github.com/braginantonev/gcalc-server/proto/orchestratorb\x06proto3"

var (
	file_proto_orchestrator_orchestrator_proto_rawDescOnce sync.Once
	file_proto_orchestrator_orchestrator_proto_rawDescData []byte
)

func file_proto_orchestrator_orchestrator_proto_rawDescGZIP() []byte {
	file_proto_orchestrator_orchestrator_proto_rawDescOnce.Do(func() {
		file_proto_orchestrator_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_orchestrator_orchestrator_proto_rawDesc), len(file_proto_orchestrator_orchestrator_proto_rawDesc)))
	})
	return file_proto_orchestrator_orchestrator_proto_rawDescData
}

var file_proto_orchestrator_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_orchestrator_orchestrator_proto_goTypes = []any{
	(*Argument)(nil),               // 0: orchestrator.Argument
	(*Task)(nil),                   // 1: orchestrator.Task
	(*TaskResult)(nil),             // 2: orchestrator.TaskResult
	(*SavedExpression)(nil),        // 3: orchestrator.SavedExpression
	(*Expression)(nil),             // 4: orchestrator.Expression
	(*Expressions)(nil),            // 5: orchestrator.Expressions
	(*wrapperspb.StringValue)(nil), // 6: google.protobuf.StringValue
	(*emptypb.Empty)(nil),          // 7: google.protobuf.Empty
}
var file_proto_orchestrator_orchestrator_proto_depIdxs = []int32{
	0, // 0: orchestrator.Task.first_argument:type_name -> orchestrator.Argument
	0, // 1: orchestrator.Task.second_argument:type_name -> orchestrator.Argument
	1, // 2: orchestrator.Expression.tasks_queue:type_name -> orchestrator.Task
	4, // 3: orchestrator.Expressions.expression:type_name -> orchestrator.Expression
	6, // 4: orchestrator.OrchestratorService.GetTask:input_type -> google.protobuf.StringValue
	2, // 5: orchestrator.OrchestratorService.SaveTaskResult:input_type -> orchestrator.TaskResult
	6, // 6: orchestrator.OrchestratorService.AddExpression:input_type -> google.protobuf.StringValue
	7, // 7: orchestrator.OrchestratorService.GetExpressions:input_type -> google.protobuf.Empty
	6, // 8: orchestrator.OrchestratorService.GetExpression:input_type -> google.protobuf.StringValue
	1, // 9: orchestrator.OrchestratorService.GetTask:output_type -> orchestrator.Task
	6, // 10: orchestrator.OrchestratorService.SaveTaskResult:output_type -> google.protobuf.StringValue
	3, // 11: orchestrator.OrchestratorService.AddExpression:output_type -> orchestrator.SavedExpression
	5, // 12: orchestrator.OrchestratorService.GetExpressions:output_type -> orchestrator.Expressions
	4, // 13: orchestrator.OrchestratorService.GetExpression:output_type -> orchestrator.Expression
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_orchestrator_orchestrator_proto_init() }
func file_proto_orchestrator_orchestrator_proto_init() {
	if File_proto_orchestrator_orchestrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_orchestrator_orchestrator_proto_rawDesc), len(file_proto_orchestrator_orchestrator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_orchestrator_orchestrator_proto_goTypes,
		DependencyIndexes: file_proto_orchestrator_orchestrator_proto_depIdxs,
		MessageInfos:      file_proto_orchestrator_orchestrator_proto_msgTypes,
	}.Build()
	File_proto_orchestrator_orchestrator_proto = out.File
	file_proto_orchestrator_orchestrator_proto_goTypes = nil
	file_proto_orchestrator_orchestrator_proto_depIdxs = nil
}
